{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;;AAEsE;AACU;;;;;;;;;ICK5E,8EAA0E;IAA9B,+VAAS,uFAAmB,KAAC;IACrE,oEAAiD;IACjD,mFAAkB;IACd,uDACJ;IAAA,4DAAmB;;;;IAHC,0DAA4B;IAA5B,4JAA4B;IAE5C,0DACJ;IADI,2FACJ;;ADHD,MAAM,YAAY;IAIvB,wCAAwC;IACxC,YAAY,IAAgB,EAAU,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;QAErD,MAAM,GAAG,GAAG,qBAAqB,CAAC;QAElC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC;YACtB,IAAI,EAAE,CAAC,IAAS,EAAE,EAAE;gBAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC9B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAO,EAAE,EAAO,EAAE,EAAE;oBACvC,OAAO,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBACxC,CAAC,CAAC,CAAC;gBAEH,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;gBACrD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACtC,CAAC;YACD,QAAQ;YACR,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC;SAClB,CAAC,CAAC;IACL,CAAC;IACD,4CAA4C;IAC5C,WAAW,CAAC,OAAY;QACtB,IAAI,GAAG,GAAG,eAAe,GAAG,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,GAAG,MAAM,CAAC;QACjE,OAAO,GAAG,CAAC;IACb,CAAC;IAED,wCAAwC;IACxC,UAAU,CAAC,OAAY;QACrB,IAAI,MAAM,GAAG,IAAI,qEAAe,EAAE,CAAC;QACnC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC;QAEtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yFAAqB,EAAE,MAAM,CAAC,CAAC;IAClD,CAAC;;wEArCU,YAAY;0GAAZ,YAAY;QCTzB,iFAA6B;QAEf,+EAAoB;QAAA,4DAAO;QAGzC,gEAAI;QACJ,yEAAuB;QAEnB,kHAKW;QACf,4DAAM;;QAN4B,0DAAY;QAAZ,kFAAY;;;;;;;;;;;;;;;;;;;;;;;;;;ACPY;AACF;AACD;AACI;AACA;AACZ;AACgC;AACC;AACnB;;AAmBtD,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;0GATtB,oEAAa;QACb,kEAAgB;QAChB,yFAAuB;QACvB,iEAAa;QACb,qEAAe;QACf,qEAAe;QACf,uEAAgB;mIAKP,SAAS,mBAflB,wDAAY;QACZ,yFAAqB,aAGrB,oEAAa;QACb,kEAAgB;QAChB,yFAAuB;QACvB,iEAAa;QACb,qEAAe;QACf,qEAAe;QACf,uEAAgB;;;;;;;;;;;;;;;;;;ACtBuC;;;;AAOpD,MAAM,qBAAqB;IAKhC,YAAqC,IAAS;QAF9C,QAAG,GAAG,EAAE,CAAC;QAGP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,GAAG,GAAG,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,MAAM,CAAC;IACvE,CAAC;;0FARU,qBAAqB,kEAKZ,qEAAe;mHALxB,qBAAqB;QCRlC,wEAAqB;QACjB,uDACJ;QAAA,4DAAK;QACL,qFAAoB;QAChB,uDACA;QAAA,gEAAI;QACJ,uDACA;QAAA,gEAAI;QACJ,uDACA;QAAA,gEAAI;QACJ,uDACA;QAAA,iEAAI;QACJ,wDACA;QAAA,iEAAI;QACJ,yEAAqB;QAAA,+DAAG;QAAA,4DAAK;QAC7B,0EAA0B;QACtB,qEAAgC;QACpC,4DAAM;QAEV,sFAAoB;QAC+D,iEAAK;QAAA,4DAAS;;QAnB7F,0DACJ;QADI,6FACJ;QAEI,0DACA;QADA,oIACA;QACA,0DACA;QADA,4GACA;QACA,0DACA;QADA,sGACA;QACA,0DACA;QADA,0HACA;QACA,0DACA;QADA,8GACA;QAGS,0DAAW;QAAX,qIAAW;;;;;;;;;;;;;;;;AChBxB,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/nation-dialog/nation-dialog.component.ts","./src/app/nation-dialog/nation-dialog.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { NationDialogComponent } from './nation-dialog/nation-dialog.component';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  //properties\n  Countries: any;\n\n  //inject HttpClient into the constructor\n  constructor(http: HttpClient, private dialog: MatDialog) {\n\n    const URL = \"assets/country.json\";\n\n    http.get(URL).subscribe({\n      next: (json: any) => {\n        this.Countries = json.Country;\n        this.Countries.sort((c1: any, c2: any) => {\n          return c1.Name.localeCompare(c2.Name);\n        });\n\n        console.log(\"JSON loaded: \" + this.Countries.length);\n        console.log(this.Countries[0].Name);\n      },\n      //failed\n      error: err => { }\n    });\n  }\n  //generate flag source based on country code\n  getFlagName(country: any): string {\n    let url = \"assets/flags/\" + country.Code2.toLowerCase() + \".jpg\";\n    return url;\n  }\n\n  //open dialog when user clicks on a card\n  openDialog(country: any) {\n    let config = new MatDialogConfig();\n    config.width = \"80%\";\n    config.height = \"auto\";\n    config.data = country;\n\n    this.dialog.open(NationDialogComponent, config);\n  }\n\n\n}","<mat-toolbar color=\"primary\">\r\n    <mat-toolbar-row>\r\n        <span>Nations of the World</span>\r\n    </mat-toolbar-row>\r\n</mat-toolbar>\r\n<br>\r\n<div class=\"gridblock\">\r\n    <!--Material Cards-->\r\n    <mat-card *ngFor=\"let country of Countries\" (click)=\"openDialog(country)\">\r\n        <img mat-card-image [src]=\"getFlagName(country)\">\r\n        <mat-card-content>\r\n            {{country.Name}}\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NationDialogComponent } from './nation-dialog/nation-dialog.component';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NationDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatToolbarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-nation-dialog',\n  templateUrl: './nation-dialog.component.html',\n  styleUrls: ['./nation-dialog.component.css']\n})\nexport class NationDialogComponent {\n  //properties\n  country: any;\n  map = \"\";\n\n  constructor(@Inject(MAT_DIALOG_DATA) data: any) {\n    this.country = data;\n    this.map = \"assets/maps/\" + this.country.Code.toLowerCase() + \".gif\";\n  }\n}\n","<h1 mat-dialog-title>\n    {{country.Name}}\n</h1>\n<mat-dialog-content>\n    Country Code: {{country.Code}} ({{country.Code2}})\n    <br>\n    Continent: {{country.Continent}}\n    <br>\n    Region: {{country.Region}}\n    <br>\n    Surface Area: {{country.SurfaceArea}} kmÂ²\n    <br>\n    Population: {{country.Population}}\n    <br>\n    <h1 mat-dialog-title>Map</h1>\n    <div class=\"containerMap\">\n        <img [src]=\"map\" class=\"center\">\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <button class=\"btnCnt\" mat-raised-button color=\"primary\" [mat-dialog-close]=\"\">CLOSE</button>\n</mat-dialog-actions>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}